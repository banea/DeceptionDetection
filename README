                        Deception Detector
                        ==================
    Computational Lingustic Tools for Identifying Deception in Text

                         June 14, 2016

                         Carmen Banea
              Language and Information Technologies
                    University of Michigan

                  Contact: carmennb at umich dot edu


CONTENTS

1. Introduction
2. How to use Deception Detector
3. References


===========================
1. INTRODUCTION

This Java library focuses on the task of deception detection, namely labeling textual statements as truths or lies. It has a double functionality:
1. build-dataset: transforming a deception dataset into a readily usable Weka .arff format for machine learning
2. classify: applying the Weka toolkit to process the data, learn from it, and evaluate a classifier.

To better understand the functionality of this library, please read the Perez-Rosas and Mihalcea EMNLP 2015 paper refererenced below.


===========================

2. HOW TO USE DECEPTION DETECTOR

This tool learns from a deception annotated dataset, and performs cross-validation on the data to determine whether the test statements are truths or lies.

The tool requires that a deception dataset is provided in a comma separated value format (CSV), where
three fields are required: id, text and class. The dataset of Open Domain Deception (Perez-Rosas and Mihalcea, 2015: http://web.eecs.umich.edu/~mihalcea/downloads.html#OpenDeception) is included with this packet.


To run the BUILD-DATASET component of the tool, run:
	java -jar deception-detector.jar build-dataset <input_filename.csv> <output_filename.arff>

where:
<input_filename.csv> is the path to the file containing the deception dataset in a CSV format as described above
<output_filename.arff> is the output file that is to be generated by the library. The format of this file conforms with the .arff format used by the Weka machine learning toolkit (http://www.cs.waikato.ac.nz/ml/weka/)


To run the CLASSIFY component of the tool, run:
	java -jar deception-detector.jar classify <input_filename.arff> ["<attributes_to_remove>"]

where:
<input_filename.arff> is the arff output file generated by the build-dataset component; thus, running that component prior to running classify is required.
 ["<attributes_to_remove>"] is an optional parameter consisting of a string of attribute names (as listed in the @ATTRIBUTE section of the .arff file) separated by space. For example, if removing attributes sentence and POS is required, parameter will be passed on the command line as "sentence POS". The command will then become: 
	java -jar deception-detector.jar classify <input_filename.arff> "sentence POS"

Currently the classify component uses a support vector machine (SVM) with polynomial kernel classifier (as provided in Weka), yet other Weka implemented classifiers can easily be swapped in by modifying the source code, which is available as a Maven project at https://github.com/banea/DeceptionDetection.

===========================

5. REFERENCES

If you use this tool, please cite:

Veronica Perez-Rosas and Rada Mihalcea, Experiments in Open Domain Deception Detection, in Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP 2015), Lisbon, Portugal, September 2015.

For the Weka machine learning toolkit, please cite:
Mark Hall, Eibe Frank, Geoffrey Holmes, Bernhard Pfahringer, Peter Reutemann, Ian H. Witten (2009); The WEKA Data Mining Software: An Update; SIGKDD Explorations, Volume 11, Issue 1.
